#!/usr/bin/env ruby
# buildfont.rb - compile unifont sources into bitmap font
# Copyright (C) 2019 Megan Ruggiero. All rights reserved.
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

CUSTOM_GLYPHS = {
  0x2409 => '00008888F88888003E08080808000000',
  0x240A => '000080808080F8003E203C2020000000',
  0x240B => '00008888885020003E08080808000000',
  0x240C => '0000F880F08080003E203C2020000000',
  0x240D => '00007880808078003C223C2222000000'
}

def load_glyphs
  glyphs = {}

  Dir['unifont/font/plane*/*.hex'].sort.each do |filename|
    # Copyleft contains a glyph in plane01 and space contains one from plane00
    next if filename == 'unifont/font/plane00/copyleft.hex'
    next if filename == 'unifont/font/plane01/space.hex'

    # These should override the values in pua.hex
    override = filename =~ %r{\Aunifont/font/plane00csur/}

    open(filename) do |input|
      input.each do |line|
        code_point, hex = line.chomp.split(?:, 2)
        code_point = code_point.to_i(16)

        if glyphs.include?(code_point) and not override
          puts("Conflicting glyphs at code point #{code_point.to_s(16)}")
        end

        glyphs[code_point] = hex
      end
    end
  end

  CUSTOM_GLYPHS.each do |code_point, data|
    glyphs[code_point] = data
  end

  glyphs
end

def generate_block(name, glyphs, range)
  print("\n\nconst unsigned char *const #{name}[] = {\n")

  range.each do |code_point|
    if (glyph = glyphs[code_point]).nil?
      print("\tC\"\",\n")
    else
      type = glyph.bytesize == 32 ? '\1' : '\2'
      data = glyph.scan(/../).map { |x| "\\x#{x}" }.join
      print("\tC\"#{type}#{data}\",\n")
    end
  end

  print("};")
end

if $0 == __FILE__
  Dir.chdir(File.dirname($0))

  glyphs = load_glyphs

  $stdout.reopen("src/unifont.c", "wb")
  print("// This file is autogenerated by buildfont.rb\n")
  print("// It is licensed under the same terms as the GNU Unifont\n\n")
  print("#include \"terminix.h\"\n\n")
  print("#define C (const unsigned char *const)")

  generate_block('plane0and1', glyphs, 0x000000..0x01FFFF)
  generate_block('plane15', glyphs, 0x0F0000..0x0FFFFF)

  $stdout.close
end

# vim: set ts=8 sts=2 sw=2 et: